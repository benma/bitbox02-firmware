# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import Literal as typing_extensions___Literal

class BTCCoin(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCCoin: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCCoin]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCCoin]]: ...
    BTC = typing___cast(BTCCoin, 0)
    TBTC = typing___cast(BTCCoin, 1)
    LTC = typing___cast(BTCCoin, 2)
    TLTC = typing___cast(BTCCoin, 3)

BTC = typing___cast(BTCCoin, 0)
TBTC = typing___cast(BTCCoin, 1)
LTC = typing___cast(BTCCoin, 2)
TLTC = typing___cast(BTCCoin, 3)

class BTCScriptType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCScriptType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCScriptType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCScriptType]]: ...
    SCRIPT_UNKNOWN = typing___cast(BTCScriptType, 0)
    SCRIPT_P2PKH = typing___cast(BTCScriptType, 1)
    SCRIPT_P2WPKH_P2SH = typing___cast(BTCScriptType, 2)
    SCRIPT_P2WPKH = typing___cast(BTCScriptType, 3)

SCRIPT_UNKNOWN = typing___cast(BTCScriptType, 0)
SCRIPT_P2PKH = typing___cast(BTCScriptType, 1)
SCRIPT_P2WPKH_P2SH = typing___cast(BTCScriptType, 2)
SCRIPT_P2WPKH = typing___cast(BTCScriptType, 3)

class BTCOutputType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCOutputType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCOutputType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCOutputType]]: ...
    UNKNOWN = typing___cast(BTCOutputType, 0)
    P2PKH = typing___cast(BTCOutputType, 1)
    P2SH = typing___cast(BTCOutputType, 2)
    P2WPKH = typing___cast(BTCOutputType, 3)
    P2WSH = typing___cast(BTCOutputType, 4)

UNKNOWN = typing___cast(BTCOutputType, 0)
P2PKH = typing___cast(BTCOutputType, 1)
P2SH = typing___cast(BTCOutputType, 2)
P2WPKH = typing___cast(BTCOutputType, 3)
P2WSH = typing___cast(BTCOutputType, 4)

class ETHCoin(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> ETHCoin: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[ETHCoin]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, ETHCoin]]: ...
    ETH = typing___cast(ETHCoin, 0)
    RopstenETH = typing___cast(ETHCoin, 1)
    RinkebyETH = typing___cast(ETHCoin, 2)

ETH = typing___cast(ETHCoin, 0)
RopstenETH = typing___cast(ETHCoin, 1)
RinkebyETH = typing___cast(ETHCoin, 2)

class Error(google___protobuf___message___Message):
    code = ...  # type: int
    message = ...  # type: typing___Text
    def __init__(
        self,
        *,
        code: typing___Optional[int] = None,
        message: typing___Optional[typing___Text] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Error: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["code", "message"]
        ) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["code", b"code", "message", b"message"]
        ) -> None: ...

class Success(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Success: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class RandomNumberResponse(google___protobuf___message___Message):
    number = ...  # type: bytes
    def __init__(self, *, number: typing___Optional[bytes] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RandomNumberResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["number"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["number", b"number"]
        ) -> None: ...

class RandomNumberRequest(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RandomNumberRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class DeviceInfoRequest(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DeviceInfoRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class DeviceInfoResponse(google___protobuf___message___Message):
    name = ...  # type: typing___Text
    initialized = ...  # type: bool
    version = ...  # type: typing___Text
    mnemonic_passphrase_enabled = ...  # type: bool
    monotonic_increments_remaining = ...  # type: int
    def __init__(
        self,
        *,
        name: typing___Optional[typing___Text] = None,
        initialized: typing___Optional[bool] = None,
        version: typing___Optional[typing___Text] = None,
        mnemonic_passphrase_enabled: typing___Optional[bool] = None,
        monotonic_increments_remaining: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DeviceInfoResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "initialized",
                "mnemonic_passphrase_enabled",
                "monotonic_increments_remaining",
                "name",
                "version",
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "initialized",
                b"initialized",
                "mnemonic_passphrase_enabled",
                b"mnemonic_passphrase_enabled",
                "monotonic_increments_remaining",
                b"monotonic_increments_remaining",
                "name",
                b"name",
                "version",
                b"version",
            ],
        ) -> None: ...

class SetDeviceNameRequest(google___protobuf___message___Message):
    name = ...  # type: typing___Text
    def __init__(self, *, name: typing___Optional[typing___Text] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetDeviceNameRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["name"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal["name", b"name"]) -> None: ...

class SetDeviceLanguageRequest(google___protobuf___message___Message):
    language = ...  # type: typing___Text
    def __init__(self, *, language: typing___Optional[typing___Text] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetDeviceLanguageRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["language"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["language", b"language"]
        ) -> None: ...

class SetPasswordRequest(google___protobuf___message___Message):
    entropy = ...  # type: bytes
    def __init__(self, *, entropy: typing___Optional[bytes] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetPasswordRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["entropy"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["entropy", b"entropy"]
        ) -> None: ...

class CreateBackupRequest(google___protobuf___message___Message):
    timestamp = ...  # type: int
    timezone_offset = ...  # type: int
    def __init__(
        self,
        *,
        timestamp: typing___Optional[int] = None,
        timezone_offset: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateBackupRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["timestamp", "timezone_offset"]
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "timestamp", b"timestamp", "timezone_offset", b"timezone_offset"
            ],
        ) -> None: ...

class RestoreBackupRequest(google___protobuf___message___Message):
    id = ...  # type: typing___Text
    timestamp = ...  # type: int
    timezone_offset = ...  # type: int
    def __init__(
        self,
        *,
        id: typing___Optional[typing___Text] = None,
        timestamp: typing___Optional[int] = None,
        timezone_offset: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RestoreBackupRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["id", "timestamp", "timezone_offset"]
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "id", b"id", "timestamp", b"timestamp", "timezone_offset", b"timezone_offset"
            ],
        ) -> None: ...

class ListBackupsRequest(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ListBackupsRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class CheckBackupRequest(google___protobuf___message___Message):
    silent = ...  # type: bool
    def __init__(self, *, silent: typing___Optional[bool] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckBackupRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["silent"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["silent", b"silent"]
        ) -> None: ...

class CheckBackupResponse(google___protobuf___message___Message):
    id = ...  # type: typing___Text
    def __init__(self, *, id: typing___Optional[typing___Text] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckBackupResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal["id", b"id"]) -> None: ...

class ShowMnemonicRequest(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ShowMnemonicRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class InsertRemoveSDCardRequest(google___protobuf___message___Message):
    class SDCardAction(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> InsertRemoveSDCardRequest.SDCardAction: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[InsertRemoveSDCardRequest.SDCardAction]: ...
        @classmethod
        def items(
            cls
        ) -> typing___List[typing___Tuple[str, InsertRemoveSDCardRequest.SDCardAction]]: ...
        REMOVE_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 0)
        INSERT_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 1)
    REMOVE_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 0)
    INSERT_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 1)

    action = ...  # type: InsertRemoveSDCardRequest.SDCardAction
    def __init__(
        self, *, action: typing___Optional[InsertRemoveSDCardRequest.SDCardAction] = None
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> InsertRemoveSDCardRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["action"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["action", b"action"]
        ) -> None: ...

class CheckSDCardRequest(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckSDCardRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class CheckSDCardResponse(google___protobuf___message___Message):
    inserted = ...  # type: bool
    def __init__(self, *, inserted: typing___Optional[bool] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckSDCardResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["inserted"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["inserted", b"inserted"]
        ) -> None: ...

class BTCPubRequest(google___protobuf___message___Message):
    class OutputType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> BTCPubRequest.OutputType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[BTCPubRequest.OutputType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, BTCPubRequest.OutputType]]: ...
        TPUB = typing___cast(BTCPubRequest.OutputType, 0)
        XPUB = typing___cast(BTCPubRequest.OutputType, 1)
        YPUB = typing___cast(BTCPubRequest.OutputType, 2)
        ZPUB = typing___cast(BTCPubRequest.OutputType, 3)
        ADDRESS = typing___cast(BTCPubRequest.OutputType, 4)
    TPUB = typing___cast(BTCPubRequest.OutputType, 0)
    XPUB = typing___cast(BTCPubRequest.OutputType, 1)
    YPUB = typing___cast(BTCPubRequest.OutputType, 2)
    ZPUB = typing___cast(BTCPubRequest.OutputType, 3)
    ADDRESS = typing___cast(BTCPubRequest.OutputType, 4)

    keypath = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    script_type = ...  # type: BTCScriptType
    coin = ...  # type: BTCCoin
    output_type = ...  # type: BTCPubRequest.OutputType
    display = ...  # type: bool
    def __init__(
        self,
        *,
        keypath: typing___Optional[typing___Iterable[int]] = None,
        script_type: typing___Optional[BTCScriptType] = None,
        coin: typing___Optional[BTCCoin] = None,
        output_type: typing___Optional[BTCPubRequest.OutputType] = None,
        display: typing___Optional[bool] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCPubRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "coin", "display", "keypath", "output_type", "script_type"
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "coin",
                b"coin",
                "display",
                b"display",
                "keypath",
                b"keypath",
                "output_type",
                b"output_type",
                "script_type",
                b"script_type",
            ],
        ) -> None: ...

class PubResponse(google___protobuf___message___Message):
    pub = ...  # type: typing___Text
    def __init__(self, *, pub: typing___Optional[typing___Text] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PubResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["pub"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal["pub", b"pub"]) -> None: ...

class BackupInfo(google___protobuf___message___Message):
    id = ...  # type: typing___Text
    timestamp = ...  # type: int
    name = ...  # type: typing___Text
    def __init__(
        self,
        *,
        id: typing___Optional[typing___Text] = None,
        timestamp: typing___Optional[int] = None,
        name: typing___Optional[typing___Text] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BackupInfo: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["id", "name", "timestamp"]
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "id", b"id", "name", b"name", "timestamp", b"timestamp"
            ],
        ) -> None: ...

class ListBackupsResponse(google___protobuf___message___Message):
    @property
    def info(
        self
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        BackupInfo
    ]: ...
    def __init__(
        self, *, info: typing___Optional[typing___Iterable[BackupInfo]] = None
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ListBackupsResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["info"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal["info", b"info"]) -> None: ...

class BTCSignInitRequest(google___protobuf___message___Message):
    coin = ...  # type: BTCCoin
    script_type = ...  # type: BTCScriptType
    bip44_account = ...  # type: int
    version = ...  # type: int
    num_inputs = ...  # type: int
    num_outputs = ...  # type: int
    locktime = ...  # type: int
    def __init__(
        self,
        *,
        coin: typing___Optional[BTCCoin] = None,
        script_type: typing___Optional[BTCScriptType] = None,
        bip44_account: typing___Optional[int] = None,
        version: typing___Optional[int] = None,
        num_inputs: typing___Optional[int] = None,
        num_outputs: typing___Optional[int] = None,
        locktime: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignInitRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "bip44_account",
                "coin",
                "locktime",
                "num_inputs",
                "num_outputs",
                "script_type",
                "version",
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "bip44_account",
                b"bip44_account",
                "coin",
                b"coin",
                "locktime",
                b"locktime",
                "num_inputs",
                b"num_inputs",
                "num_outputs",
                b"num_outputs",
                "script_type",
                b"script_type",
                "version",
                b"version",
            ],
        ) -> None: ...

class BTCSignNextResponse(google___protobuf___message___Message):
    class Type(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> BTCSignNextResponse.Type: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[BTCSignNextResponse.Type]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, BTCSignNextResponse.Type]]: ...
        INPUT_PASS1 = typing___cast(BTCSignNextResponse.Type, 0)
        OUTPUT = typing___cast(BTCSignNextResponse.Type, 1)
        INPUT_PASS2_COMMIT = typing___cast(BTCSignNextResponse.Type, 2)
        INPUT_PASS2_SIGN = typing___cast(BTCSignNextResponse.Type, 3)
        DONE = typing___cast(BTCSignNextResponse.Type, 4)
    INPUT_PASS1 = typing___cast(BTCSignNextResponse.Type, 0)
    OUTPUT = typing___cast(BTCSignNextResponse.Type, 1)
    INPUT_PASS2_COMMIT = typing___cast(BTCSignNextResponse.Type, 2)
    INPUT_PASS2_SIGN = typing___cast(BTCSignNextResponse.Type, 3)
    DONE = typing___cast(BTCSignNextResponse.Type, 4)

    type = ...  # type: BTCSignNextResponse.Type
    index = ...  # type: int
    data = ...  # type: bytes
    def __init__(
        self,
        *,
        type: typing___Optional[BTCSignNextResponse.Type] = None,
        index: typing___Optional[int] = None,
        data: typing___Optional[bytes] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignNextResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["data", "index", "type"]
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "data", b"data", "index", b"index", "type", b"type"
            ],
        ) -> None: ...

class BTCSignInputRequest(google___protobuf___message___Message):
    class Input(google___protobuf___message___Message):
        prevOutHash = ...  # type: bytes
        prevOutIndex = ...  # type: int
        prevOutValue = ...  # type: int
        sequence = ...  # type: int
        keypath = (
            ...
        )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
        host_nonce_commitment = ...  # type: bytes
        def __init__(
            self,
            *,
            prevOutHash: typing___Optional[bytes] = None,
            prevOutIndex: typing___Optional[int] = None,
            prevOutValue: typing___Optional[int] = None,
            sequence: typing___Optional[int] = None,
            keypath: typing___Optional[typing___Iterable[int]] = None,
            host_nonce_commitment: typing___Optional[bytes] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> BTCSignInputRequest.Input: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "host_nonce_commitment",
                    "keypath",
                    "prevOutHash",
                    "prevOutIndex",
                    "prevOutValue",
                    "sequence",
                ],
            ) -> None: ...
        else:
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "host_nonce_commitment",
                    b"host_nonce_commitment",
                    "keypath",
                    b"keypath",
                    "prevOutHash",
                    b"prevOutHash",
                    "prevOutIndex",
                    b"prevOutIndex",
                    "prevOutValue",
                    b"prevOutValue",
                    "sequence",
                    b"sequence",
                ],
            ) -> None: ...
    @property
    def input(self) -> BTCSignInputRequest.Input: ...
    @property
    def sign(self) -> SignRequest: ...
    def __init__(
        self,
        *,
        input: typing___Optional[BTCSignInputRequest.Input] = None,
        sign: typing___Optional[SignRequest] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignInputRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["input", "request", "sign"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["input", "request", "sign"]
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "input", b"input", "request", b"request", "sign", b"sign"
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "input", b"input", "request", b"request", "sign", b"sign"
            ],
        ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["request", b"request"]
    ) -> typing_extensions___Literal["input", "sign"]: ...

class BTCSignOutputRequest(google___protobuf___message___Message):
    ours = ...  # type: bool
    type = ...  # type: BTCOutputType
    value = ...  # type: int
    hash = ...  # type: bytes
    keypath = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    def __init__(
        self,
        *,
        ours: typing___Optional[bool] = None,
        type: typing___Optional[BTCOutputType] = None,
        value: typing___Optional[int] = None,
        hash: typing___Optional[bytes] = None,
        keypath: typing___Optional[typing___Iterable[int]] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignOutputRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal["hash", "keypath", "ours", "type", "value"],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "hash",
                b"hash",
                "keypath",
                b"keypath",
                "ours",
                b"ours",
                "type",
                b"type",
                "value",
                b"value",
            ],
        ) -> None: ...

class SetMnemonicPassphraseEnabledRequest(google___protobuf___message___Message):
    enabled = ...  # type: bool
    def __init__(self, *, enabled: typing___Optional[bool] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetMnemonicPassphraseEnabledRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["enabled"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["enabled", b"enabled"]
        ) -> None: ...

class PerformAttestationRequest(google___protobuf___message___Message):
    challenge = ...  # type: bytes
    def __init__(self, *, challenge: typing___Optional[bytes] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PerformAttestationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["challenge"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["challenge", b"challenge"]
        ) -> None: ...

class PerformAttestationResponse(google___protobuf___message___Message):
    bootloader_hash = ...  # type: bytes
    device_pubkey = ...  # type: bytes
    certificate = ...  # type: bytes
    root_pubkey_identifier = ...  # type: bytes
    challenge_signature = ...  # type: bytes
    def __init__(
        self,
        *,
        bootloader_hash: typing___Optional[bytes] = None,
        device_pubkey: typing___Optional[bytes] = None,
        certificate: typing___Optional[bytes] = None,
        root_pubkey_identifier: typing___Optional[bytes] = None,
        challenge_signature: typing___Optional[bytes] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PerformAttestationResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "bootloader_hash",
                "certificate",
                "challenge_signature",
                "device_pubkey",
                "root_pubkey_identifier",
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "bootloader_hash",
                b"bootloader_hash",
                "certificate",
                b"certificate",
                "challenge_signature",
                b"challenge_signature",
                "device_pubkey",
                b"device_pubkey",
                "root_pubkey_identifier",
                b"root_pubkey_identifier",
            ],
        ) -> None: ...

class RebootRequest(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RebootRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class ETHPubRequest(google___protobuf___message___Message):
    class OutputType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> ETHPubRequest.OutputType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[ETHPubRequest.OutputType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, ETHPubRequest.OutputType]]: ...
        ADDRESS = typing___cast(ETHPubRequest.OutputType, 0)
        XPUB = typing___cast(ETHPubRequest.OutputType, 1)
    ADDRESS = typing___cast(ETHPubRequest.OutputType, 0)
    XPUB = typing___cast(ETHPubRequest.OutputType, 1)

    keypath = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    coin = ...  # type: ETHCoin
    output_type = ...  # type: ETHPubRequest.OutputType
    display = ...  # type: bool
    contract_address = ...  # type: bytes
    def __init__(
        self,
        *,
        keypath: typing___Optional[typing___Iterable[int]] = None,
        coin: typing___Optional[ETHCoin] = None,
        output_type: typing___Optional[ETHPubRequest.OutputType] = None,
        display: typing___Optional[bool] = None,
        contract_address: typing___Optional[bytes] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHPubRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "coin", "contract_address", "display", "keypath", "output_type"
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "coin",
                b"coin",
                "contract_address",
                b"contract_address",
                "display",
                b"display",
                "keypath",
                b"keypath",
                "output_type",
                b"output_type",
            ],
        ) -> None: ...

class ETHSignRequest(google___protobuf___message___Message):
    coin = ...  # type: ETHCoin
    keypath = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    nonce = ...  # type: bytes
    gas_price = ...  # type: bytes
    gas_limit = ...  # type: bytes
    recipient = ...  # type: bytes
    value = ...  # type: bytes
    data = ...  # type: bytes
    def __init__(
        self,
        *,
        coin: typing___Optional[ETHCoin] = None,
        keypath: typing___Optional[typing___Iterable[int]] = None,
        nonce: typing___Optional[bytes] = None,
        gas_price: typing___Optional[bytes] = None,
        gas_limit: typing___Optional[bytes] = None,
        recipient: typing___Optional[bytes] = None,
        value: typing___Optional[bytes] = None,
        data: typing___Optional[bytes] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHSignRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "coin", "data", "gas_limit", "gas_price", "keypath", "nonce", "recipient", "value"
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "coin",
                b"coin",
                "data",
                b"data",
                "gas_limit",
                b"gas_limit",
                "gas_price",
                b"gas_price",
                "keypath",
                b"keypath",
                "nonce",
                b"nonce",
                "recipient",
                b"recipient",
                "value",
                b"value",
            ],
        ) -> None: ...

class ETHSignResponse(google___protobuf___message___Message):
    signature = ...  # type: bytes
    def __init__(self, *, signature: typing___Optional[bytes] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHSignResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["signature"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["signature", b"signature"]
        ) -> None: ...

class ETHRequest(google___protobuf___message___Message):
    @property
    def pub(self) -> ETHPubRequest: ...
    @property
    def sign(self) -> ETHSignRequest: ...
    def __init__(
        self,
        *,
        pub: typing___Optional[ETHPubRequest] = None,
        sign: typing___Optional[ETHSignRequest] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["pub", "request", "sign"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["pub", "request", "sign"]
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "pub", b"pub", "request", b"request", "sign", b"sign"
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "pub", b"pub", "request", b"request", "sign", b"sign"
            ],
        ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["request", b"request"]
    ) -> typing_extensions___Literal["pub", "sign"]: ...

class ETHResponse(google___protobuf___message___Message):
    @property
    def pub(self) -> PubResponse: ...
    @property
    def sign(self) -> ETHSignResponse: ...
    def __init__(
        self,
        *,
        pub: typing___Optional[PubResponse] = None,
        sign: typing___Optional[ETHSignResponse] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["pub", "response", "sign"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["pub", "response", "sign"]
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "pub", b"pub", "response", b"response", "sign", b"sign"
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "pub", b"pub", "response", b"response", "sign", b"sign"
            ],
        ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["response", b"response"]
    ) -> typing_extensions___Literal["pub", "sign"]: ...

class ResetRequest(google___protobuf___message___Message):
    def __init__(self,) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ResetRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class RestoreFromMnemonicRequest(google___protobuf___message___Message):
    timestamp = ...  # type: int
    timezone_offset = ...  # type: int
    def __init__(
        self,
        *,
        timestamp: typing___Optional[int] = None,
        timezone_offset: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RestoreFromMnemonicRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["timestamp", "timezone_offset"]
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "timestamp", b"timestamp", "timezone_offset", b"timezone_offset"
            ],
        ) -> None: ...

class SignRequest(google___protobuf___message___Message):
    host_nonce = ...  # type: bytes
    def __init__(self, *, host_nonce: typing___Optional[bytes] = None) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SignRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal["host_nonce"]) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal["host_nonce", b"host_nonce"]
        ) -> None: ...

class Request(google___protobuf___message___Message):
    @property
    def random_number(self) -> RandomNumberRequest: ...
    @property
    def device_name(self) -> SetDeviceNameRequest: ...
    @property
    def device_language(self) -> SetDeviceLanguageRequest: ...
    @property
    def device_info(self) -> DeviceInfoRequest: ...
    @property
    def set_password(self) -> SetPasswordRequest: ...
    @property
    def create_backup(self) -> CreateBackupRequest: ...
    @property
    def show_mnemonic(self) -> ShowMnemonicRequest: ...
    @property
    def btc_pub(self) -> BTCPubRequest: ...
    @property
    def btc_sign_init(self) -> BTCSignInitRequest: ...
    @property
    def btc_sign_input(self) -> BTCSignInputRequest: ...
    @property
    def btc_sign_output(self) -> BTCSignOutputRequest: ...
    @property
    def insert_remove_sdcard(self) -> InsertRemoveSDCardRequest: ...
    @property
    def check_sdcard(self) -> CheckSDCardRequest: ...
    @property
    def set_mnemonic_passphrase_enabled(self) -> SetMnemonicPassphraseEnabledRequest: ...
    @property
    def list_backups(self) -> ListBackupsRequest: ...
    @property
    def restore_backup(self) -> RestoreBackupRequest: ...
    @property
    def perform_attestation(self) -> PerformAttestationRequest: ...
    @property
    def reboot(self) -> RebootRequest: ...
    @property
    def check_backup(self) -> CheckBackupRequest: ...
    @property
    def eth(self) -> ETHRequest: ...
    @property
    def reset(self) -> ResetRequest: ...
    @property
    def restore_from_mnemonic(self) -> RestoreFromMnemonicRequest: ...
    def __init__(
        self,
        *,
        random_number: typing___Optional[RandomNumberRequest] = None,
        device_name: typing___Optional[SetDeviceNameRequest] = None,
        device_language: typing___Optional[SetDeviceLanguageRequest] = None,
        device_info: typing___Optional[DeviceInfoRequest] = None,
        set_password: typing___Optional[SetPasswordRequest] = None,
        create_backup: typing___Optional[CreateBackupRequest] = None,
        show_mnemonic: typing___Optional[ShowMnemonicRequest] = None,
        btc_pub: typing___Optional[BTCPubRequest] = None,
        btc_sign_init: typing___Optional[BTCSignInitRequest] = None,
        btc_sign_input: typing___Optional[BTCSignInputRequest] = None,
        btc_sign_output: typing___Optional[BTCSignOutputRequest] = None,
        insert_remove_sdcard: typing___Optional[InsertRemoveSDCardRequest] = None,
        check_sdcard: typing___Optional[CheckSDCardRequest] = None,
        set_mnemonic_passphrase_enabled: typing___Optional[
            SetMnemonicPassphraseEnabledRequest
        ] = None,
        list_backups: typing___Optional[ListBackupsRequest] = None,
        restore_backup: typing___Optional[RestoreBackupRequest] = None,
        perform_attestation: typing___Optional[PerformAttestationRequest] = None,
        reboot: typing___Optional[RebootRequest] = None,
        check_backup: typing___Optional[CheckBackupRequest] = None,
        eth: typing___Optional[ETHRequest] = None,
        reset: typing___Optional[ResetRequest] = None,
        restore_from_mnemonic: typing___Optional[RestoreFromMnemonicRequest] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Request: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "btc_pub",
                "btc_sign_init",
                "btc_sign_input",
                "btc_sign_output",
                "check_backup",
                "check_sdcard",
                "create_backup",
                "device_info",
                "device_language",
                "device_name",
                "eth",
                "insert_remove_sdcard",
                "list_backups",
                "perform_attestation",
                "random_number",
                "reboot",
                "request",
                "reset",
                "restore_backup",
                "restore_from_mnemonic",
                "set_mnemonic_passphrase_enabled",
                "set_password",
                "show_mnemonic",
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "btc_pub",
                "btc_sign_init",
                "btc_sign_input",
                "btc_sign_output",
                "check_backup",
                "check_sdcard",
                "create_backup",
                "device_info",
                "device_language",
                "device_name",
                "eth",
                "insert_remove_sdcard",
                "list_backups",
                "perform_attestation",
                "random_number",
                "reboot",
                "request",
                "reset",
                "restore_backup",
                "restore_from_mnemonic",
                "set_mnemonic_passphrase_enabled",
                "set_password",
                "show_mnemonic",
            ],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "btc_pub",
                b"btc_pub",
                "btc_sign_init",
                b"btc_sign_init",
                "btc_sign_input",
                b"btc_sign_input",
                "btc_sign_output",
                b"btc_sign_output",
                "check_backup",
                b"check_backup",
                "check_sdcard",
                b"check_sdcard",
                "create_backup",
                b"create_backup",
                "device_info",
                b"device_info",
                "device_language",
                b"device_language",
                "device_name",
                b"device_name",
                "eth",
                b"eth",
                "insert_remove_sdcard",
                b"insert_remove_sdcard",
                "list_backups",
                b"list_backups",
                "perform_attestation",
                b"perform_attestation",
                "random_number",
                b"random_number",
                "reboot",
                b"reboot",
                "request",
                b"request",
                "reset",
                b"reset",
                "restore_backup",
                b"restore_backup",
                "restore_from_mnemonic",
                b"restore_from_mnemonic",
                "set_mnemonic_passphrase_enabled",
                b"set_mnemonic_passphrase_enabled",
                "set_password",
                b"set_password",
                "show_mnemonic",
                b"show_mnemonic",
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "btc_pub",
                b"btc_pub",
                "btc_sign_init",
                b"btc_sign_init",
                "btc_sign_input",
                b"btc_sign_input",
                "btc_sign_output",
                b"btc_sign_output",
                "check_backup",
                b"check_backup",
                "check_sdcard",
                b"check_sdcard",
                "create_backup",
                b"create_backup",
                "device_info",
                b"device_info",
                "device_language",
                b"device_language",
                "device_name",
                b"device_name",
                "eth",
                b"eth",
                "insert_remove_sdcard",
                b"insert_remove_sdcard",
                "list_backups",
                b"list_backups",
                "perform_attestation",
                b"perform_attestation",
                "random_number",
                b"random_number",
                "reboot",
                b"reboot",
                "request",
                b"request",
                "reset",
                b"reset",
                "restore_backup",
                b"restore_backup",
                "restore_from_mnemonic",
                b"restore_from_mnemonic",
                "set_mnemonic_passphrase_enabled",
                b"set_mnemonic_passphrase_enabled",
                "set_password",
                b"set_password",
                "show_mnemonic",
                b"show_mnemonic",
            ],
        ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["request", b"request"]
    ) -> typing_extensions___Literal[
        "random_number",
        "device_name",
        "device_language",
        "device_info",
        "set_password",
        "create_backup",
        "show_mnemonic",
        "btc_pub",
        "btc_sign_init",
        "btc_sign_input",
        "btc_sign_output",
        "insert_remove_sdcard",
        "check_sdcard",
        "set_mnemonic_passphrase_enabled",
        "list_backups",
        "restore_backup",
        "perform_attestation",
        "reboot",
        "check_backup",
        "eth",
        "reset",
        "restore_from_mnemonic",
    ]: ...

class Response(google___protobuf___message___Message):
    @property
    def success(self) -> Success: ...
    @property
    def error(self) -> Error: ...
    @property
    def random_number(self) -> RandomNumberResponse: ...
    @property
    def device_info(self) -> DeviceInfoResponse: ...
    @property
    def pub(self) -> PubResponse: ...
    @property
    def btc_sign_next(self) -> BTCSignNextResponse: ...
    @property
    def list_backups(self) -> ListBackupsResponse: ...
    @property
    def check_backup(self) -> CheckBackupResponse: ...
    @property
    def perform_attestation(self) -> PerformAttestationResponse: ...
    @property
    def check_sdcard(self) -> CheckSDCardResponse: ...
    @property
    def eth(self) -> ETHResponse: ...
    def __init__(
        self,
        *,
        success: typing___Optional[Success] = None,
        error: typing___Optional[Error] = None,
        random_number: typing___Optional[RandomNumberResponse] = None,
        device_info: typing___Optional[DeviceInfoResponse] = None,
        pub: typing___Optional[PubResponse] = None,
        btc_sign_next: typing___Optional[BTCSignNextResponse] = None,
        list_backups: typing___Optional[ListBackupsResponse] = None,
        check_backup: typing___Optional[CheckBackupResponse] = None,
        perform_attestation: typing___Optional[PerformAttestationResponse] = None,
        check_sdcard: typing___Optional[CheckSDCardResponse] = None,
        eth: typing___Optional[ETHResponse] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Response: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "btc_sign_next",
                "check_backup",
                "check_sdcard",
                "device_info",
                "error",
                "eth",
                "list_backups",
                "perform_attestation",
                "pub",
                "random_number",
                "response",
                "success",
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "btc_sign_next",
                "check_backup",
                "check_sdcard",
                "device_info",
                "error",
                "eth",
                "list_backups",
                "perform_attestation",
                "pub",
                "random_number",
                "response",
                "success",
            ],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "btc_sign_next",
                b"btc_sign_next",
                "check_backup",
                b"check_backup",
                "check_sdcard",
                b"check_sdcard",
                "device_info",
                b"device_info",
                "error",
                b"error",
                "eth",
                b"eth",
                "list_backups",
                b"list_backups",
                "perform_attestation",
                b"perform_attestation",
                "pub",
                b"pub",
                "random_number",
                b"random_number",
                "response",
                b"response",
                "success",
                b"success",
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "btc_sign_next",
                b"btc_sign_next",
                "check_backup",
                b"check_backup",
                "check_sdcard",
                b"check_sdcard",
                "device_info",
                b"device_info",
                "error",
                b"error",
                "eth",
                b"eth",
                "list_backups",
                b"list_backups",
                "perform_attestation",
                b"perform_attestation",
                "pub",
                b"pub",
                "random_number",
                b"random_number",
                "response",
                b"response",
                "success",
                b"success",
            ],
        ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["response", b"response"]
    ) -> typing_extensions___Literal[
        "success",
        "error",
        "random_number",
        "device_info",
        "pub",
        "btc_sign_next",
        "list_backups",
        "check_backup",
        "perform_attestation",
        "check_sdcard",
        "eth",
    ]: ...
